import { useCallback, useRef } from "react";

const Intro = () => {
  const processContainerRef = useRef(null);

  const onFrame1Click = useCallback(() => {
    if (processContainerRef.current) {
      const yOffset = processContainerRef.current.offsetTop + 2900;
      window.scrollTo({ top: yOffset, behavior: "smooth" });
    }
  }, []);

  return (
<div className=" w-[414px] h-[454px] mt- relative bg-[#1b2131]">
  <div className="w-[136px] h-7">
  <div
          ref={processContainerRef}
          data-scroll-to="processContainer"
        >
    <p  onClick={onFrame1Click}
    className="underline w-[136px] h-7 absolute left-32 top-[380px] text-[13px] font-bold text-left text-[#d3defb] font-poppins">
      SEE MY PROCESS
    <img src={"arrow.svg"} alt="Arrow Icon" className="inline-block w-4 h-3 ml-1" />
    </p>
    </div>
  </div>
  <p className="w-[239px] h-[191px] absolute left-[76px] top-[129px] text-[14px] text-center text-[#f2f2f2] font-poppins">
    I'm ISannan, a self-taught full-stack &amp; NLP developer with 5+ years' experience, handling
    80+ projects. I excel at planning and executing efficient full-stack projects with exceptional
    speed while ensuring top-notch performance, security, and maintainability.
  </p>
  <div className="flex justify-center ">
    <svg
      width={42}
      height={42}
      viewBox="0 0 42 42"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="w-[42px] h-[41.97px]"
      preserveAspectRatio="none"
    >
      <path
        opacity="0.2"
        d="M40.3343 21.3981C40.3372 24.0656 39.7671 26.7036 38.6611 29.1401C37.5552 31.5767 35.9383 33.7569 33.916 35.5385C32.7001 33.1909 30.846 31.2195 28.5589 29.8427C26.2719 28.4659 23.6412 27.7375 20.9583 27.7382C22.5551 27.7382 24.116 27.2734 25.4436 26.4026C26.7713 25.5318 27.8061 24.294 28.4171 22.8459C29.0282 21.3978 29.188 19.8043 28.8765 18.267C28.565 16.7297 27.7961 15.3175 26.667 14.2092C25.538 13.1008 24.0994 12.346 22.5334 12.0403C20.9673 11.7345 19.344 11.8914 17.8688 12.4912C16.3936 13.0911 15.1327 14.1069 14.2456 15.4101C13.3585 16.7134 12.885 18.2457 12.885 19.8131C12.885 21.915 13.7356 23.9307 15.2497 25.417C16.7637 26.9032 18.8172 27.7382 20.9583 27.7382C18.2755 27.7375 15.6448 28.4659 13.3578 29.8427C11.0707 31.2195 9.21655 33.1909 8.0007 35.5385C4.30207 32.2727 2.02477 27.7355 1.64046 22.8667C1.25615 17.9978 2.79428 13.1704 5.93627 9.38429C9.07826 5.59815 13.5834 3.14339 18.5185 2.52843C23.4536 1.91347 28.4407 3.18542 32.4467 6.08085C32.2456 6.64419 32.2107 7.25179 32.3459 7.83375C32.4811 8.41571 32.781 8.94838 33.2109 9.37045C33.6409 9.79252 34.1835 10.0869 34.7763 10.2196C35.3692 10.3523 35.9882 10.318 36.562 10.1207C39.0177 13.386 40.3401 17.3393 40.3343 21.3981Z"
        fill="#265CED"
      />
      <path
        d="M41.1921 8.53337L40.2516 8.0004C40.3619 7.42694 40.3619 6.83827 40.2516 6.2648L41.1921 5.73184C41.5631 5.52165 41.8338 5.17542 41.9447 4.7693C42.0556 4.36318 41.9976 3.93045 41.7835 3.5663C41.5694 3.20215 41.2166 2.93641 40.8029 2.82755C40.3892 2.71868 39.9484 2.7756 39.5774 2.98579L38.6349 3.52073C38.1838 3.14084 37.6651 2.84597 37.105 2.65095V1.58502C37.105 1.16465 36.9349 0.761492 36.6321 0.464242C36.3293 0.166993 35.9186 0 35.4903 0C35.0621 0 34.6514 0.166993 34.3486 0.464242C34.0458 0.761492 33.8757 1.16465 33.8757 1.58502V2.65095C33.3155 2.84597 32.7969 3.14084 32.3458 3.52073L31.4032 2.98579C31.2195 2.88171 31.0168 2.81417 30.8065 2.78702C30.5962 2.75987 30.3826 2.77364 30.1777 2.82755C29.9729 2.88145 29.7809 2.97444 29.6126 3.10119C29.4444 3.22795 29.3032 3.38599 29.1972 3.5663C29.0912 3.74661 29.0224 3.94565 28.9947 4.15206C28.967 4.35847 28.9811 4.56821 29.036 4.7693C29.0909 4.97039 29.1856 5.15889 29.3148 5.32404C29.4439 5.4892 29.6049 5.62777 29.7886 5.73184L30.7291 6.2648C30.6188 6.83827 30.6188 7.42694 30.7291 8.0004L29.7886 8.53337C29.4806 8.70775 29.2398 8.97705 29.1037 9.29948C28.9675 9.62191 28.9436 9.97944 29.0356 10.3166C29.1276 10.6537 29.3304 10.9516 29.6125 11.1641C29.8947 11.3765 30.2403 11.4916 30.5959 11.4914C30.8794 11.4923 31.158 11.4191 31.4032 11.2794L32.3458 10.7445C32.7969 11.1244 33.3155 11.4192 33.8757 11.6143V12.6802C33.8757 13.1006 34.0458 13.5037 34.3486 13.801C34.6514 14.0982 35.0621 14.2652 35.4903 14.2652C35.9186 14.2652 36.3293 14.0982 36.6321 13.801C36.9349 13.5037 37.105 13.1006 37.105 12.6802V11.6143C37.6651 11.4192 38.1838 11.1244 38.6349 10.7445L39.5774 11.2794C39.8226 11.4191 40.1013 11.4923 40.3848 11.4914C40.7403 11.4916 41.086 11.3765 41.3681 11.1641C41.6502 10.9516 41.853 10.6537 41.9451 10.3166C42.0371 9.97944 42.0131 9.62191 41.877 9.29948C41.7409 8.97705 41.5001 8.70775 41.1921 8.53337ZM33.8757 7.1326C33.8757 6.81912 33.9704 6.51267 34.1478 6.25201C34.3252 5.99136 34.5774 5.7882 34.8724 5.66823C35.1675 5.54827 35.4921 5.51688 35.8053 5.57804C36.1185 5.63919 36.4062 5.79015 36.6321 6.01182C36.8579 6.23349 37.0117 6.51592 37.074 6.82338C37.1363 7.13085 37.1043 7.44954 36.9821 7.73917C36.8599 8.02879 36.6529 8.27634 36.3874 8.4505C36.1219 8.62467 35.8097 8.71763 35.4903 8.71763C35.0621 8.71763 34.6514 8.55063 34.3486 8.25338C34.0458 7.95613 33.8757 7.55298 33.8757 7.1326ZM39.7995 16.6645C39.3771 16.7339 39.0001 16.9651 38.7515 17.3073C38.5028 17.6495 38.4028 18.0747 38.4734 18.4893C38.6374 19.4504 38.7197 20.4233 38.7197 21.3978C38.7235 25.6659 37.1255 29.7857 34.2309 32.9705C32.4301 30.4088 29.8979 28.427 26.9528 27.2743C28.5348 26.0511 29.6892 24.3745 30.2555 22.4774C30.8217 20.5804 30.7717 18.5572 30.1123 16.6894C29.453 14.8216 28.2171 13.2018 26.5765 12.0555C24.9359 10.9091 22.9722 10.2931 20.9584 10.2931C18.9446 10.2931 16.9809 10.9091 15.3403 12.0555C13.6997 13.2018 12.4638 14.8216 11.8044 16.6894C11.1451 18.5572 11.0951 20.5804 11.6613 22.4774C12.2276 24.3745 13.382 26.0511 14.964 27.2743C12.0188 28.427 9.48668 30.4088 7.68587 32.9705C5.41468 30.4581 3.93112 27.3553 3.41356 24.035C2.89601 20.7147 3.36649 17.3183 4.76845 14.2542C6.17041 11.1902 8.44415 8.58887 11.3163 6.76311C14.1884 4.93734 17.5366 3.96485 20.9584 3.96256C21.9511 3.9624 22.9422 4.04325 23.9213 4.20427C24.3417 4.2694 24.7714 4.16892 25.1167 3.92469C25.4621 3.68047 25.6952 3.31226 25.7655 2.90016C25.8357 2.48806 25.7373 2.0654 25.4918 1.72413C25.2462 1.38286 24.8733 1.15058 24.4541 1.07782C20.0692 0.353688 15.5633 1.01627 11.587 2.96989C7.61064 4.92351 4.36968 8.06707 2.33202 11.9467C0.294365 15.8263 -0.434555 20.2413 0.250509 24.5541C0.935574 28.8669 2.99917 32.8544 6.14336 35.9409C9.28754 39.0274 13.3496 41.0531 17.7431 41.7256C22.1365 42.3981 26.634 41.6825 30.5862 39.6823C34.5384 37.682 37.7407 34.5005 39.7309 30.5972C41.721 26.6939 42.396 22.2707 41.6583 17.9662C41.5877 17.5517 41.3521 17.1816 41.0035 16.9375C40.6549 16.6934 40.2218 16.5952 39.7995 16.6645ZM14.4997 19.8128C14.4997 18.5588 14.8785 17.333 15.5882 16.2904C16.2979 15.2478 17.3066 14.4352 18.4868 13.9553C19.6669 13.4754 20.9655 13.3499 22.2184 13.5945C23.4713 13.8392 24.6221 14.443 25.5253 15.3297C26.4286 16.2163 27.0437 17.346 27.2929 18.5759C27.5421 19.8058 27.4142 21.0805 26.9254 22.239C26.4366 23.3975 25.6087 24.3877 24.5466 25.0844C23.4845 25.781 22.2358 26.1529 20.9584 26.1529C19.2454 26.1529 17.6027 25.4849 16.3914 24.2959C15.1802 23.1069 14.4997 21.4943 14.4997 19.8128ZM10.0756 35.1677C11.2436 33.3744 12.8528 31.8986 14.7547 30.8764C16.6566 29.8541 18.79 29.3183 20.9584 29.3183C23.1267 29.3183 25.2602 29.8541 27.1621 30.8764C29.064 31.8986 30.6731 33.3744 31.8412 35.1677C28.7296 37.5432 24.9002 38.8329 20.9584 38.8329C17.0165 38.8329 13.1871 37.5432 10.0756 35.1677Z"
        fill="white"
      />
    </svg>
    </div>
    <p className="w-18 h-[22px] absolute left-[172px] top-[88.97px] text-base font-bold text-center text-[#f2f2f2] font-poppins">
      I am...
    </p>
</div>
  );
};

export default Intro;
